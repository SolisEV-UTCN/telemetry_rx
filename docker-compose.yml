services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: telemetry_rx
    depends_on:
      - database
        #- tunnel
    devices:
    # Comment out if using adapter other than USB
      - /dev/ttyUSB0:/dev/ttyUSB0
    environment:
      INFLUX_TOKEN_FILE: /run/secrets/influx_token
      INFLUX_ORG: ${INFLUX_ORG}
    networks:
      - solis-network
    restart: unless-stopped
    secrets:
      - influx_token

  database:
    container_name: influx
    environment:
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN_FILE: /run/secrets/influx_token
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUX_BUCKET}
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUX_ORG}
      DOCKER_INFLUXDB_INIT_PASSWORD_FILE: /run/secrets/influx_password
      DOCKER_INFLUXDB_INIT_USERNAME_FILE: /run/secrets/influx_username
      INFLUXDB_HTTP_AUTH_ENABLED: false
    image: influxdb:2.7-alpine
    networks:
      - solis-network
    ports:
      - 8080:8086
    restart: on-failure
    volumes:
      - influxdb_storage:/var/lib/influxdb2 # Persistence storage
      # Dashboard templates
      - type: bind
        source: ./templates
        target: /etc/influx/templates
    secrets:
      - influx_username
      - influx_password
      - influx_token
  # tunnel:
  #   container_name: ngrok
  #   image: ngrok/ngrok:latest
  #   restart: on-failure
  #   command:
  #     - "start"
  #     - "app"
  #     - "--config"
  #     - "/home/ngrok/.config/ngrok/ngrok.yml"
  #   networks:
  #     - solis-network
  #   ports:
  #     - 4040:4040
  #   volumes:
  #     # Dashboard templates
  #     - type: bind
  #       source: ./config/ngrok.yml
  #       target: /home/ngrok/.config/ngrok/ngrok.yml

volumes:
  influxdb_storage:
    name: "influxdb_storage"

secrets:
  influx_username:
    file: secrets/influx_username.txt
  influx_password:
    file: secrets/influx_password.txt
  influx_token:
    file: secrets/influx_token.txt

networks:
  solis-network:
